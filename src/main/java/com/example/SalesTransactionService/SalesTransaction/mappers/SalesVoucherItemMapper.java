package com.example.SalesTransactionService.SalesTransaction.mappers;


import com.example.SalesTransactionService.SalesTransaction.dtos.RequestDto.SalesVoucherRequestDto;
import com.example.SalesTransactionService.SalesTransaction.models.SalesVoucher.SalesVoucherItemPrice;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

import java.math.BigDecimal; // Ensure BigDecimal is used

@Mapper(componentModel = "spring")
public interface SalesVoucherItemMapper {

    // Map Request DTO to Entity
    // Calculated fields (itemDiscountAmount, itemTaxAmount, totalPrice) are ignored
    // because they are calculated within the entity's calculateTotals() method or service.
    @Mapping(target = "id", ignore = true) // ID is generated by DB
    @Mapping(target = "salesVoucher", ignore = true) // Relationship handled by parent mapper/service
    @Mapping(target = "itemDiscountAmount", ignore = true)
    @Mapping(target = "itemTaxAmount", ignore = true)
    @Mapping(target = "totalPrice", ignore = true)
    SalesVoucherItemPrice toEntity(SalesVoucherRequestDto.SalesVoucherItemRequestDto dto);

    // Map Entity to Response DTO
    SalesVoucherResponseDto.LineItemDto toDto(SalesVoucherLineItem entity);

    // For updating an existing entity
    // @Mapping(target = "id", ignore = true)
    // @Mapping(target = "salesVoucher", ignore = true)
    // @Mapping(target = "itemDiscountAmount", ignore = true)
    // @Mapping(target = "itemTaxAmount", ignore = true)
    // @Mapping(target = "totalPrice", ignore = true)
    // void updateEntityFromDto(SalesVoucherRequest.LineItemRequest dto, @MappingTarget SalesVoucherLineItem entity);
}